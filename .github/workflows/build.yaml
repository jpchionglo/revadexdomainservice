jobs:
  
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet build


  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx

  analyze:
    needs: [build, test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: git fetch --unshallow
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: | # multiline value with each line ending with a newline character \n
          dotnet sonarscanner begin -o:'jpchionglo' -k:'revadexdomainservice' -d:sonar.login='b5ab7c8a70f06b21bb7800a49609c5462fec9763' -d:sonar.host.url='https://sonarcloud.io/'
          dotnet build
          dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
          dotnet sonarscanner end -d:sonar.login='b5ab7c8a70f06b21bb7800a49609c5462fec9763'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: cibuild

on: push

